// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageType.proto

#include "MessageType.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace Protobuf {
}  // namespace Protobuf
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_MessageType_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MessageType_2eproto = nullptr;
const uint32_t TableStruct_MessageType_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_MessageType_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\021MessageType.proto\022\010Protobuf*\373\001\n\013Messag"
  "eType\022\r\n\tAddPlayer\020\000\022\010\n\004Move\020\001\022\n\n\006Attack"
  "\020\002\022\010\n\004Pick\020\003\022\013\n\007UseProp\020\004\022\r\n\tThrowProp\020\005"
  "\022\010\n\004Send\020\006\022\021\n\rInvalidPlayer\020\007\022\017\n\013ValidPl"
  "ayer\020\010\022\r\n\tStartGame\020\t\022\n\n\006Gaming\020\n\022\013\n\007End"
  "Game\020\013\022\022\n\016UseCommonSkill\020\014\022\024\n\020UseUltimat"
  "eSkill\020\r\022\n\n\006UseGem\020\016\022\014\n\010ThrowGem\020\017\022\007\n\003Ma"
  "p\020\020*\240\001\n\013GameObjType\022\023\n\017NullGameObjType\020\000"
  "\022\r\n\tCharacter\020\001\022\010\n\004Wall\020\002\022\010\n\004Prop\020\003\022\n\n\006B"
  "ullet\020\004\022\016\n\nBirthPoint\020\005\022\023\n\017OutOfBoundBlo"
  "ck\020\006\022\t\n\005Grass\020\007\022\013\n\007GemWell\020\010\022\020\n\014BombedBu"
  "llet\020\t*6\n\tShapeType\022\021\n\rNullShapeType\020\000\022\n"
  "\n\006Circle\020\001\022\n\n\006Square\020\002*L\n\tPlaceType\022\021\n\rN"
  "ullPlaceType\020\000\022\010\n\004Land\020\001\022\n\n\006Grass1\020\002\022\n\n\006"
  "Grass2\020\003\022\n\n\006Grass3\020\004*W\n\010PropType\022\020\n\014Null"
  "PropType\020\000\022\014\n\010addSpeed\020\001\022\013\n\007addLIFE\020\002\022\007\n"
  "\003Gem\020\003\022\n\n\006Shield\020\004\022\t\n\005Spear\020\005*\225\001\n\020Passiv"
  "eSkillType\022\030\n\024NullPassiveSkillType\020\000\022\026\n\022"
  "RecoverAfterBattle\020\001\022\033\n\027SpeedUpWhenLeavi"
  "ngGrass\020\002\022\013\n\007Vampire\020\003\022\013\n\007PSkill3\020\004\022\013\n\007P"
  "Skill4\020\005\022\013\n\007PSkill5\020\006*\215\001\n\017ActiveSkillTyp"
  "e\022\027\n\023NullActiveSkillType\020\000\022\021\n\rBecomeVamp"
  "ire\020\001\022\022\n\016BecomeAssassin\020\002\022\021\n\rNuclearWeap"
  "on\020\003\022\r\n\tSuperFast\020\004\022\013\n\007ASkill4\020\005\022\013\n\007ASki"
  "ll5\020\006*W\n\010BuffType\022\020\n\014NullBuffType\020\000\022\r\n\tM"
  "oveSpeed\020\001\022\013\n\007AddLIFE\020\002\022\016\n\nShieldBuff\020\003\022"
  "\r\n\tSpearBuff\020\004*u\n\nBulletType\022\022\n\016NullBull"
  "etType\020\000\022\016\n\nLineBullet\020\001\022\021\n\rCommonBullet"
  "2\020\002\022\016\n\nFastBullet\020\003\022\022\n\016OrdinaryBullet\020\004\022"
  "\014\n\010AtomBomb\020\005B\026\252\002\023Communication.Protob\006p"
  "roto3"
  ;
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MessageType_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MessageType_2eproto = {
  false, false, 1205, descriptor_table_protodef_MessageType_2eproto, "MessageType.proto", 
  &descriptor_table_MessageType_2eproto_once, nullptr, 0, 0,
  schemas, file_default_instances, TableStruct_MessageType_2eproto::offsets,
  nullptr, file_level_enum_descriptors_MessageType_2eproto, file_level_service_descriptors_MessageType_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_MessageType_2eproto_getter() {
  return &descriptor_table_MessageType_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_MessageType_2eproto(&descriptor_table_MessageType_2eproto);
namespace Protobuf {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GameObjType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[1];
}
bool GameObjType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ShapeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[2];
}
bool ShapeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PlaceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[3];
}
bool PlaceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PropType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[4];
}
bool PropType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* PassiveSkillType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[5];
}
bool PassiveSkillType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ActiveSkillType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[6];
}
bool ActiveSkillType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BuffType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[7];
}
bool BuffType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BulletType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MessageType_2eproto);
  return file_level_enum_descriptors_MessageType_2eproto[8];
}
bool BulletType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Protobuf
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
